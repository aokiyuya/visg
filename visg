#! /bin/bash
# @(#) This script is simplification script for Vim Shell Gei.
# Author: Yuya Aoki
# LICENSE: MIT

help(){
	echo "
VISG - version 0.1 (2017 Mar 8)

Usage:
	visg [Options] +'Augments'	filtering use vim

Options:
	-h or --help                show help page
	-v or --version             show version
	-u, -r or --read [rcfile]       use settingfile ( vimrc )
	-t                          test command

Caution:
	The command depends VIM.
	So you must install VIM if you wanna use the command.
"
	exit 0

}
version(){
	echo "VERSION 0.1.0"
	exit 0
}


testfunction(){
echo "test1 help msg"
visg -h > test1
visg --help > test2
diff test1 test2
if [ $? = 0 ]; then
	echo "completed"
	rm test1 test2
else
	echo "something wrong"
	exit 1
fi

echo "test2 version msg"
visg -v > test1
visg --version > test2
diff test1 test2
if [ $? = 0 ]; then
	echo "completed"
	rm test1 test2
else
	echo "something wrong"
	exit 1
fi

echo "test3 simple imput and yyppp"
vim -es '+norm iaaaa' '+norm yyppp' '+%p|q!' > ans
visg +'norm iaaaa' +'norm yyppp' > result
diff ans result
if [ $? = 0 ]; then
	echo "completed"
	rm ans result
else
	echo "something wrong"
	exit 1
fi

echo "test4 open a file"
echo "teststring" > testfile
visg testfile +'norm yyppp' > result
vim -es testfile +'norm yyppp' +%p +q! >ans
diff ans result
if [ $? = 0 ]; then
	echo "completed"
	rm -f ans result
else
	echo "something wrong"
	exit 1
fi

echo "test5 use pipe (simple string)"
echo "teststring" | visg +'norm yyppp' > result
echo "teststring" | vim -es /dev/stdin +'norm yyppp' +'%p|q!' > ans
diff ans result
if [ $? = 0 ]; then
	echo "completed"
	rm ans result
else
	echo "something wrong"
	exit 1
fi

echo "test6 use pipe (multi row string)"
seq 10 | visg +'3,5!tac' > result
seq 10 | vim -es /dev/stdin +'3,5!tac' +'%p|q!' > ans
diff ans result
if [ $? = 0 ]; then
	echo "completed"
	rm ans result
else
	echo "something wrong"
	exit 1
fi

echo "test7 given too many script"
echo +'norm i'{1..10} | xargs visg > /dev/null
if [ $? = 1 ]; then
	echo "completed"
else
	echo "something wrong"
	exit 1
fi

echo "test8 read rc file"
echo "set number" > rc
vim -u rc -es +'norm ooo' +'%p|q!' > ans
visg -r rc +'norm ooo' > result
diff ans result
if [ $? = 0 ]; then
	echo "completed"
	rm ans result
else
	echo "something wrong"
	exit 1
fi

echo "test9 read rc file and open file"
vim -u rc -es testfile +'norm ooo' +'%p|q!' > ans
visg -r rc testfile +'norm ooo' > result
diff ans result
if [ $? = 0 ]; then
	echo "completed"
	rm ans result
else
	echo "something wrong"
	exit 1
fi
rm testfile rc
exit 0
}

OPT_FLAG_RC=0

while getopts ':hvtr-:' OPT
do
	case $OPT in
		h)
			help
			;;
		v)
			version
			;;
		t)
			testfunction
			;;
		r)
			RCFILE=$2
			OPT_FLAG_RC=1
			shift;;
		u)
			RCFILE=$2
			OPT_FLAG_RC=1
			shift;;
		-)
			case "${OPTARG}" in
				help)
					help
					;;
				version)
					version
					;;
				read)
					RCFILE=$2
					OPT_FLAG_RC=1
					shift;;
				*)
					echo "${OPTARG} Didn't match anything"
			esac
			;;
		\?)
			echo "undefined options ."
			;;
	esac
done
shift $(($OPTIND - 1))

if [ $# = 0 ]; then
	echo "No script"
	help
	exit 0
fi


if [ $(echo $* | grep -o + | grep -c +) -gt 9 ]; then
	echo "Too many argments."
	echo "You can use '+' 9 times."
	exit 1
fi

if [ $OPT_FLAG_RC = 0 ]; then
	if [ -t 0 ]; then
		vim -es "$@" +'%p|q!'
		exit 0
	else
		vim -es /dev/stdin "$@" +'%p|q!'
		exit 0
	fi
else
	if [ -t 0 ]; then
		vim -u $RCFILE -es "$@" +'%p|q!'
		exit 0
	else
		vim -u $RCFILE -es /dev/stdin "$@" +'%p|q!'
		exit 0
	fi
fi

exit 0

